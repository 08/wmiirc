display:
  status:
    pomodoro:
      refresh: 60

      script: |
        MINUTES_PER_POMODORO = 25
        POMODOROS_PER_SET = 4
        @pomodoros ||= 0

        def start
          @started_at = Time.now
          @pomodoros += 1
          refresh
        end

        def stop
          @started_at = nil
          refresh
        end

        def reset
          stop
          @pomodoros = 0
          refresh
        end

      label: |
        if @started_at
          minutes_elasped = ((Time.now - @started_at) / 60).round
          minutes_remaining = MINUTES_PER_POMODORO - minutes_elasped

          if minutes_remaining > 0
            color = :success
          elsif minutes_remaining == 0
            color = :notice

            dialog '-title', 'Pomodoro', "Take a #{
              @pomodoros.next % POMODOROS_PER_SET == 0 ? 'longer' : 'short'
            } break!"
          else
            color = :error
          end

          message = "#{minutes_remaining}m x#{@pomodoros}"
        else
          message = 'stopped'
        end

        [color, 'pomodoro', message]

      control:
        action:
          start_pomodoro: self.start
          stop_pomodoro: self.stop
          reset_pomodoro: self.reset

        mouse_action:
          left_click: start_pomodoro
          right_click: stop_pomodoro
          wheel_click: reset_pomodoro
