
import:
  - display/status

display:
    status:
      cpu:
        refresh: 30

        script: |
          LEVELS = {:low => 35.0, :high => 45.0, :critical => 55.0}

          def temperature
            @temp=`sysctl hw.acpi.thermal.tz0.temperature`[/.*:\s*([0-9]+\,[0-9]+)/, 1].to_f
          end

          def level
            case
              when @temp > LEVELS[:critical] then :critical
              when @temp > LEVELS[:high] then :high
              when @temp <= LEVELS[:low] then :low
            end
          end

          def color
            case level
              when :critical then CONFIG['display']['color']['error']
              when :high then CONFIG['display']['color']['success']
              when :low then CONFIG['display']['color']['success']
            end
          end

        label: |
          temperature
          if level == :critical
            `xkbbell -force`
            dialog "CPU temperature is critical"
          end
          [color, @temp.to_s+' C' ]

        mouse_action:
            left_click: thermal_info
control:
    action:
        thermal_info: |
            dialog `sysctl hw.acpi.thermal`
