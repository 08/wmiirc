require:
  - barometer: '~> 0.7.3'

status:
  weather:
    params:
      location:
      metric:
      proxy:

    script: |
      if @proxy
        proxy_uri = URI.parse(@proxy)
        Barometer::WeatherService.class_eval do
          http_proxy proxy_uri.host, proxy_uri.port
        end
      end

    label: |
      barometer = Barometer.new(@location)
      @weather = barometer.measure
      status = @weather.current.icon

      icon =
        case status
        when /cloud|overcast/ then "\u2601"
        when /rain|shower/ then "\u2602"
        when /snow|hail/ then "\u2603"
        when /lightning/ then "\u2607"
        when /thunder/ then "\u2608"
        else "\u2600"
        end

      temperature = @weather.temperature.to_s(@metric).tr('CF', "\u2103\u2109")

      [icon, temperature, status]

    control:
      action:
        weather_details: |
          refresh
          dialog @weather.to_yaml

      mouse_action:
        left_click: weather_details
