#!/usr/bin/ruby -w
# This is an interactive Ruby shell for wmii.
# - Press the TAB key for command completion.

=begin
  Copyright 2004 Joel VanderWerf
  Copyright 2006 Suraj N. Kurapati

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
=end


## This code was adapted from ruby-talk:99201.

require 'irb'
require 'irb/completion'

module IRB
  # Starts IRB within the context of the given object.
  def IRB.start_session aContextObj
    IRB.setup __FILE__ unless defined? $irb

    ws = WorkSpace.new(aContextObj)

    $irb = if @CONF[:SCRIPT] # normally, set by parse_opts
      Irb.new ws, @CONF[:SCRIPT]
    else
      Irb.new ws
    end

    @CONF[:IRB_RC].call($irb.context) if @CONF[:IRB_RC]
    @CONF[:MAIN_CONTEXT] = $irb.context

    trap 'INT' do
      $irb.signal_handle
    end

    custom_configuration if defined? IRB.custom_configuration

    catch :IRB_EXIT do
      $irb.eval_input
    end
  end
end

class Object
  include IRB::ExtendCommandBundle # so that Marshal.dump works
end


if __FILE__ == $0
  # show usage info
    require 'rdoc/usage'
    RDoc::usage_no_exit

  $:.unshift File.dirname(__FILE__)
  require 'rc'

  IRB.start_session Wmii
end
